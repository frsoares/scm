1) Crie no seu computador um diretório chamado "aula"

2) Inclua nele alguns arquivos, por exemplo, os pdfs das aulas. Inclua
também pelo menos um arquivo texto chamado "mod.txt". Se possível,
inclua outros também.

3) Transforme esse diretório em um repositório Git.

4) Inclua todos os arquivos do diretório no repositório.

5) Modifique o arquivo "mod.txt" acrescentando algumas linhas e removendo
outras. É melhor se você fizer isso escrevendo texto entendível, ao
invés de apenas digitar caracteres aleatórios. Assim fica mais fácil de
entender o que mudou.

6) Peça para o Git lhe mostrar as diferenças entre a versão anterior do
arquivo e a que você acabou de modificar.

7) Inclua o arquivo modificado no índice e repita a operação (garantindo
que o Git lhe mostre as diferenças).

8) Dê commit para o repositório

9) Peça novamente para o Git lhe mostrar as diferenças entre as versões
do arquivo. O que acontece?

10) Peça ao Git para lhe mostrar as diferenças entre a versão do arquivo
em seu primeiro commit e a do último. Inverta a ordem da solicitação. O
que mudou?

11) Obtenha informações sobre seu histórico de commits, incluindo uma
indicação das modificações que foram feitas.

12) Faça mais algumas modificações. A partir daqui, para cada modificação,
faça o commit no repositório.

13) Obtenha novamente o histórico de commits do repositório.

14) Reverta o estado atual para o de dois commits atrás.

15) Modifique mod.txt de novo e apenas o inclua no índice. 

16) Use git status para ver quais arquivos foram modificados e estão staged
para commit.

17) Retire esses arquivos da stating area. Use git status de novo para
ver o que mudou.

18) Crie um branch novo chamado teste.

19) Torne teste o branch atual.

20) Modifique mod.txt neste branch.

21) Torne master o branch atual e modifique mod.txt. Note que as mudanças que você realizou enquanto no branch teste não estão mais visíveis. 

22) Combine as modificações do branch teste com as do master, resolvendo eventuais conflitos. 

23) Opcionalmente, você pode apagar o branch teste depois de combinar os resultados. Para isso, passe use git branch com o argumento -d. 

24) Crie uma conta no Github

25) Crie na sua conta do github um repositório homônimo ao que você criou
em sua máquina local.

26) Envie para o github, para o repositório que você acabou de criar,
todos os arquivos do seu repositório local.

27) Junte-se com mais uma ou duas pessoas e forme uma equipe. Elejam um
dos membros como líder. O repositório criado por essa pessoa será o
principal. Essa pessoa deve adicionar os outros membros da equipe como colaboradores em seu repositório. 

28) Crie, em outro diretório, um clone do repositório do líder da
equipe.

29) Modifique os arquivos que lá estão contidos e tente atualizar o
repositório remoto. Todos os membros da equipe devem fazer isso e
resolver conflitos à medida que surgem. 

